{"ast":null,"code":"var _jsxFileName = \"C:\\\\Koodit\\\\testi\\\\varausjarjestelma\\\\src\\\\comps\\\\ImageGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion'; // tää on fancympi versio\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageGrid = ({\n  setSelectedImg\n}) => {\n  _s();\n\n  const {\n    docs\n  } = useFirestore('images'); // tämä on Firebase picturecollectionin nimi //docs palauttaa kaikki kuvat mitä on tietokannassa\n  //tätä vaihtamalla voidaan esim louda pakettiautolle oma folderi ja mökille oma --> tämä tulee siis cloud Firestoreen näkyviin\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"img-grid\",\n    children: docs && docs.map(doc => /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"img-wrap\",\n      //doc.id On arrayn uniikki documentin key value voidaan tarkastaa laittamalla console.log(docs);\n      layout: true,\n      whileHover: {\n        opacity: 1\n      },\n      onClick: () => setSelectedImg(doc.url),\n      children: /*#__PURE__*/_jsxDEV(motion.img, {\n        src: doc.url,\n        alt: \"Uploaded-picture\",\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          delay: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)\n    }, doc.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n  /*\r\n  const ImageGrid = ({ setSelectedImg }) => {\r\n   const { docs } = useFirestore('images');\r\n   return (\r\n       <div className=\"img-grid\">\r\n           {docs && docs.map(doc => (\r\n  \r\n               <img src={doc.url} alt=\"Uploaded-picture\" />\r\n                     \r\n            \r\n   ))\r\n  }\r\n       </div >\r\n   )\r\n   */\n};\n\n_s(ImageGrid, \"QOBo4DJndmskvzwfLgtcveHppgM=\", false, function () {\n  return [useFirestore];\n});\n\n_c = ImageGrid;\nexport default ImageGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGrid\");","map":{"version":3,"sources":["C:/Koodit/testi/varausjarjestelma/src/comps/ImageGrid.js"],"names":["React","useFirestore","motion","ImageGrid","setSelectedImg","docs","map","doc","opacity","url","delay","id"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,MAAT,QAAuB,eAAvB,C,CACA;;;;AACA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,YAAY,CAAC,QAAD,CAA7B,CADsC,CACG;AACzC;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACKI,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,GAAG,iBACjB,QAAC,MAAD,CAAQ,GAAR;AAAY,MAAA,SAAS,EAAC,UAAtB;AAA8C;AAC1C,MAAA,MAAM,MADV;AAEI,MAAA,UAAU,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAFhB;AAGI,MAAA,OAAO,EAAE,MAAMJ,cAAc,CAACG,GAAG,CAACE,GAAL,CAHjC;AAAA,6BAKI,QAAC,MAAD,CAAQ,GAAR;AAAY,QAAA,GAAG,EAAEF,GAAG,CAACE,GAArB;AAA0B,QAAA,GAAG,EAAC,kBAA9B;AACI,QAAA,OAAO,EAAE;AAAED,UAAAA,OAAO,EAAE;AAAX,SADb;AAEI,QAAA,OAAO,EAAE;AAAEA,UAAAA,OAAO,EAAE;AAAX,SAFb;AAGI,QAAA,UAAU,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT;AAHhB;AAAA;AAAA;AAAA;AAAA;AALJ,OAAsCH,GAAG,CAACI,EAA1C;AAAA;AAAA;AAAA;AAAA,YADK;AADb;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,CAtCD;;GAAMR,S;UACeF,Y;;;KADfE,S;AAwCN,eAAeA,SAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n// tää on fancympi versio\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n    const { docs } = useFirestore('images'); // tämä on Firebase picturecollectionin nimi //docs palauttaa kaikki kuvat mitä on tietokannassa\r\n    //tätä vaihtamalla voidaan esim louda pakettiautolle oma folderi ja mökille oma --> tämä tulee siis cloud Firestoreen näkyviin\r\n    return (\r\n        <div className=\"img-grid\">\r\n            {docs && docs.map(doc => (\r\n                <motion.div className=\"img-wrap\" key={doc.id} //doc.id On arrayn uniikki documentin key value voidaan tarkastaa laittamalla console.log(docs);\r\n                    layout\r\n                    whileHover={{ opacity: 1 }}\r\n                    onClick={() => setSelectedImg(doc.url)}\r\n                >\r\n                    <motion.img src={doc.url} alt=\"Uploaded-picture\"\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n                        transition={{ delay: 1 }}\r\n                    />\r\n\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n    /*\r\n    const ImageGrid = ({ setSelectedImg }) => {\r\n     const { docs } = useFirestore('images');\r\n     return (\r\n         <div className=\"img-grid\">\r\n             {docs && docs.map(doc => (\r\n \r\n \r\n                 <img src={doc.url} alt=\"Uploaded-picture\" />\r\n                       \r\n              \r\n     ))\r\n }\r\n         </div >\r\n     )\r\n     */\r\n}\r\n\r\nexport default ImageGrid;"]},"metadata":{},"sourceType":"module"}